{
  "manifestVersion": "3.1",
  "impls": {
    "f0fc1ebfdafb1f061ef8b3eb8fc17ac42e9da8cbb1e1692a3d65d842bbff8759": {
      "address": "0xaFe1AF552Fa14D8eBd38950E66b8667Bdbf4079F",
      "txHash": "0x2e05d26cbee4af015e4e8d388c2f9873c0333e188ec460b7ff0b40f0b9271adf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)4379_storage)",
            "src": "contracts/Auction.sol:75"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Auction.sol:76"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)4386_storage))",
            "src": "contracts/Auction.sol:77"
          },
          {
            "contract": "Auction",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/Auction.sol:78"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:81"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:82"
          },
          {
            "contract": "Auction",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:83"
          },
          {
            "contract": "Auction",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:84"
          },
          {
            "contract": "Auction",
            "label": "options",
            "type": "t_struct(Options)4408_storage",
            "src": "contracts/Auction.sol:86"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)4395_storage",
            "src": "contracts/Auction.sol:87"
          },
          {
            "contract": "Auction",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)12178",
            "src": "contracts/Auction.sol:88"
          },
          {
            "contract": "Auction",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Auction.sol:90"
          },
          {
            "contract": "Auction",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/Auction.sol:96"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)4379_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionReserves)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)4386_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Auction.UserBid))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)4408_storage": {
            "label": "struct Auction.Options"
          },
          "t_struct(Addresses)4395_storage": {
            "label": "struct Auction.Addresses"
          },
          "t_contract(IAuctionV1)12178": {
            "label": "contract IAuctionV1"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d653afe43f6277e2cf444ddd260d99d3404761f1e0ad613eda99b2c79a084bc2": {
      "address": "0xB38e49e1DA0baD4D7fC95833E2EF267f21D3e861",
      "txHash": "0x0f9be6475fd533d32022cfbbb80613f2f3c488797b1cf43c7cd65ea353303ac8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)1795_storage)",
            "src": "contracts/Auction.sol:74"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Auction.sol:75"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)1802_storage))",
            "src": "contracts/Auction.sol:76"
          },
          {
            "contract": "Auction",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/Auction.sol:77"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:80"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:81"
          },
          {
            "contract": "Auction",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:82"
          },
          {
            "contract": "Auction",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:83"
          },
          {
            "contract": "Auction",
            "label": "options",
            "type": "t_struct(Options)1824_storage",
            "src": "contracts/Auction.sol:85"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)1811_storage",
            "src": "contracts/Auction.sol:86"
          },
          {
            "contract": "Auction",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)3246",
            "src": "contracts/Auction.sol:87"
          },
          {
            "contract": "Auction",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Auction.sol:89"
          },
          {
            "contract": "Auction",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/Auction.sol:95"
          },
          {
            "contract": "Auction",
            "label": "middlePriceDays",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:96"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)1795_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionReserves)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)1802_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Auction.UserBid))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)1824_storage": {
            "label": "struct Auction.Options"
          },
          "t_struct(Addresses)1811_storage": {
            "label": "struct Auction.Addresses"
          },
          "t_contract(IAuctionV1)3246": {
            "label": "contract IAuctionV1"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "544d9d58f68b991bb9f598cecb02793f6f08209f906191d673a18bd1dcd8faa1": {
      "address": "0x309b0248775B5f11c3c276EA108230de18fAcd72",
      "txHash": "0x2e9f44a93e39617d5ea5d4b94150fc398613a8b69594e176674e2b9c1e654e07",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Token",
            "label": "swapToken",
            "type": "t_contract(IERC20)3199",
            "src": "contracts/Token.sol:24"
          },
          {
            "contract": "Token",
            "label": "swapIsOver",
            "type": "t_bool",
            "src": "contracts/Token.sol:25"
          },
          {
            "contract": "Token",
            "label": "swapTokenBalance",
            "type": "t_uint256",
            "src": "contracts/Token.sol:26"
          },
          {
            "contract": "Token",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Token.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)3199": {
            "label": "contract IERC20"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4b969b27636e5d442e184ae2fcb79f836553c68ed79ef10c7a1244505b3cee16": {
      "address": "0xD9591546Dd167C8B11Cf08d3B58dE00c6Fe9cD45",
      "txHash": "0x0f890787d524c59171daa17ef4be7aa88e7a700c00e4005db31c0120ccb4649d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NativeSwap",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/NativeSwap.sol:29"
          },
          {
            "contract": "NativeSwap",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/NativeSwap.sol:30"
          },
          {
            "contract": "NativeSwap",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/NativeSwap.sol:31"
          },
          {
            "contract": "NativeSwap",
            "label": "swapToken",
            "type": "t_contract(IERC20)3199",
            "src": "contracts/NativeSwap.sol:33"
          },
          {
            "contract": "NativeSwap",
            "label": "mainToken",
            "type": "t_contract(IToken)12241",
            "src": "contracts/NativeSwap.sol:34"
          },
          {
            "contract": "NativeSwap",
            "label": "auction",
            "type": "t_contract(IAuction)12033",
            "src": "contracts/NativeSwap.sol:35"
          },
          {
            "contract": "NativeSwap",
            "label": "swapTokenBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NativeSwap.sol:37"
          },
          {
            "contract": "NativeSwap",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/NativeSwap.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20)3199": {
            "label": "contract IERC20"
          },
          "t_contract(IToken)12241": {
            "label": "contract IToken"
          },
          "t_contract(IAuction)12033": {
            "label": "contract IAuction"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "784536ee92931f4bd04754448228f91fdd34afd3ce4b29369101766e1f375571": {
      "address": "0xe6141d9C15D511CC3821dC6605F444400d1694eC",
      "txHash": "0xff74e04a0e3e6ee76d65c3c50c5dd3952b2d3ef4ea5d810d4ca41f577f3a4a38",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BPD",
            "label": "poolYearAmounts",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts/BPD.sol:23"
          },
          {
            "contract": "BPD",
            "label": "poolTransferred",
            "type": "t_array(t_bool)5_storage",
            "src": "contracts/BPD.sol:24"
          },
          {
            "contract": "BPD",
            "label": "poolYearPercentages",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts/BPD.sol:25"
          },
          {
            "contract": "BPD",
            "label": "mainToken",
            "type": "t_address",
            "src": "contracts/BPD.sol:28"
          },
          {
            "contract": "BPD",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/BPD.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_array(t_bool)5_storage": {
            "label": "bool[5]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8348c932e57ca565571addcabd9f4d8e5a41ff7120d6ba22ab7b6ee6b166df41": {
      "address": "0x59c6Fe7a46187EF67BB64052a06B96eD95837161",
      "txHash": "0xb0d98b2f72081b706016a9c9cfdba219b41fa2db23ef917da120ae32a634ba1f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ForeignSwap",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:33"
          },
          {
            "contract": "ForeignSwap",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:34"
          },
          {
            "contract": "ForeignSwap",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:35"
          },
          {
            "contract": "ForeignSwap",
            "label": "maxClaimAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:36"
          },
          {
            "contract": "ForeignSwap",
            "label": "mainToken",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:39"
          },
          {
            "contract": "ForeignSwap",
            "label": "staking",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:40"
          },
          {
            "contract": "ForeignSwap",
            "label": "auction",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:41"
          },
          {
            "contract": "ForeignSwap",
            "label": "bigPayDayPool",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:42"
          },
          {
            "contract": "ForeignSwap",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:43"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:46"
          },
          {
            "contract": "ForeignSwap",
            "label": "totalSnapshotAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:47"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedAddresses",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:48"
          },
          {
            "contract": "ForeignSwap",
            "label": "totalSnapshotAddresses",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:49"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ForeignSwap.sol:52"
          },
          {
            "contract": "ForeignSwap",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/ForeignSwap.sol:55"
          },
          {
            "contract": "ForeignSwap",
            "label": "finalClaimedAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:62"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "77c0e84b8ded5dd3b77ed669abfb179c11e25a01d2e51b7ad6a4b705620c55b4": {
      "address": "0x901B27fE21035343f2Fb788C96Bc909456c55bf2",
      "txHash": "0x645fcc7e3cd3f5673899702e60826d4e5e804dc0aeac508cd2057c3801fdd6c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SubBalances",
            "label": "addresses",
            "type": "t_struct(Addresses)9019_storage",
            "src": "contracts/SubBalances.sol:53"
          },
          {
            "contract": "SubBalances",
            "label": "subBalancesV1",
            "type": "t_contract(ISubBalancesV1)12224",
            "src": "contracts/SubBalances.sol:54"
          },
          {
            "contract": "SubBalances",
            "label": "startTimestamp",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:61"
          },
          {
            "contract": "SubBalances",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:62"
          },
          {
            "contract": "SubBalances",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:63"
          },
          {
            "contract": "SubBalances",
            "label": "currentSharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:64"
          },
          {
            "contract": "SubBalances",
            "label": "subBalanceList",
            "type": "t_array(t_struct(SubBalance)9010_storage)5_storage",
            "src": "contracts/SubBalances.sol:66"
          },
          {
            "contract": "SubBalances",
            "label": "periods",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts/SubBalances.sol:67"
          },
          {
            "contract": "SubBalances",
            "label": "stakeSessions",
            "type": "t_mapping(t_uint256,t_struct(StakeSession)8999_storage)",
            "src": "contracts/SubBalances.sol:68"
          },
          {
            "contract": "SubBalances",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/SubBalances.sol:70"
          }
        ],
        "types": {
          "t_struct(Addresses)9019_storage": {
            "label": "struct SubBalances.Addresses"
          },
          "t_contract(ISubBalancesV1)12224": {
            "label": "contract ISubBalancesV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(SubBalance)9010_storage)5_storage": {
            "label": "struct SubBalances.SubBalance[5]"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_mapping(t_uint256,t_struct(StakeSession)8999_storage)": {
            "label": "mapping(uint256 => struct SubBalances.StakeSession)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "37083a70f137d4678a0d4422c9030902bfc5529372d0f4764e4bbcc5f7729f66": {
      "address": "0xFFfEf0B6B42a9bF9433b8f465ab897d100724dE0",
      "txHash": "0x34ee599e31dbc0685ab10b97a93e77d47bfc435b4e9ddf6fa7243772dd0b70be",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)7524_storage",
            "src": "contracts/Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)12127",
            "src": "contracts/Staking.sol:71"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:79"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:82"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:83"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:84"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:85"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)7517_storage))",
            "src": "contracts/Staking.sol:90"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)7500_storage)dyn_storage",
            "src": "contracts/Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Staking.sol:95"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:98"
          }
        ],
        "types": {
          "t_struct(Addresses)7524_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)12127": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)7517_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)7500_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6f8640f611f651ce8635cb80350837ac3ac6462347b06f230e0bea0a919e633a": {
      "address": "0xcad76A6f281A3BEa2E41d4F7Cb85DE77BAaE5aED",
      "txHash": "0x7732e283fc1e29cfb5aacab7177077f4973115927f7cad0e6adac2f39b2bb28e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)4471_storage)",
            "src": "contracts/Auction.sol:74"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Auction.sol:75"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)4478_storage))",
            "src": "contracts/Auction.sol:76"
          },
          {
            "contract": "Auction",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/Auction.sol:77"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:80"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:81"
          },
          {
            "contract": "Auction",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:82"
          },
          {
            "contract": "Auction",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:83"
          },
          {
            "contract": "Auction",
            "label": "options",
            "type": "t_struct(Options)4500_storage",
            "src": "contracts/Auction.sol:85"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)4487_storage",
            "src": "contracts/Auction.sol:86"
          },
          {
            "contract": "Auction",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)16032",
            "src": "contracts/Auction.sol:87"
          },
          {
            "contract": "Auction",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Auction.sol:89"
          },
          {
            "contract": "Auction",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/Auction.sol:95"
          },
          {
            "contract": "Auction",
            "label": "middlePriceDays",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:96"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)4471_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionReserves)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)4478_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Auction.UserBid))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)4500_storage": {
            "label": "struct Auction.Options"
          },
          "t_struct(Addresses)4487_storage": {
            "label": "struct Auction.Addresses"
          },
          "t_contract(IAuctionV1)16032": {
            "label": "contract IAuctionV1"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d8f5c5eaa9d6f3a48d2844343ada6fca53dace3e2dddb2be993281676338f52e": {
      "address": "0xA9eb3C155b9C30DC8257961572d7AD326A889F31",
      "txHash": "0xd16932b19b96315ce5fa5611028697f7287996bf6598b9110c1b61e300d4c123",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Token",
            "label": "swapToken",
            "type": "t_contract(IERC20)3293",
            "src": "contracts/Token.sol:29"
          },
          {
            "contract": "Token",
            "label": "swapIsOver",
            "type": "t_bool",
            "src": "contracts/Token.sol:30"
          },
          {
            "contract": "Token",
            "label": "swapTokenBalance",
            "type": "t_uint256",
            "src": "contracts/Token.sol:31"
          },
          {
            "contract": "Token",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Token.sol:32"
          }
        ],
        "types": {
          "t_contract(IERC20)3293": {
            "label": "contract IERC20"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c49e6380ecf16ead6f1754ffac8d4dc6f197bdbcb2c57508da142ff9a6ea44ea": {
      "address": "0x70a36DdB89A75c785F128679b84EFB0Ea7a7f7cf",
      "txHash": "0x733defd8c6b065e4930a375ea99f93c79883b6697b0bde460c25dfa4e7052261",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NativeSwap",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/NativeSwap.sol:29"
          },
          {
            "contract": "NativeSwap",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/NativeSwap.sol:30"
          },
          {
            "contract": "NativeSwap",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/NativeSwap.sol:31"
          },
          {
            "contract": "NativeSwap",
            "label": "swapToken",
            "type": "t_contract(IERC20)3293",
            "src": "contracts/NativeSwap.sol:33"
          },
          {
            "contract": "NativeSwap",
            "label": "mainToken",
            "type": "t_contract(IToken)16223",
            "src": "contracts/NativeSwap.sol:34"
          },
          {
            "contract": "NativeSwap",
            "label": "auction",
            "type": "t_contract(IAuction)16015",
            "src": "contracts/NativeSwap.sol:35"
          },
          {
            "contract": "NativeSwap",
            "label": "swapTokenBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NativeSwap.sol:37"
          },
          {
            "contract": "NativeSwap",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/NativeSwap.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20)3293": {
            "label": "contract IERC20"
          },
          "t_contract(IToken)16223": {
            "label": "contract IToken"
          },
          "t_contract(IAuction)16015": {
            "label": "contract IAuction"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "11aa87abdf08bad8bb60ab16cc02f527fd4750bd496a07c383ab4b7789f2c3c7": {
      "address": "0x3327bd9CF7ECCCf0368f80547bed7e2EE7Aa3C89",
      "txHash": "0x298804b0af96ec88facc86dd7063a47ebfa3b445706c7a970da32884f3fe0fde",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BPD",
            "label": "poolYearAmounts",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts/BPD.sol:23"
          },
          {
            "contract": "BPD",
            "label": "poolTransferred",
            "type": "t_array(t_bool)5_storage",
            "src": "contracts/BPD.sol:24"
          },
          {
            "contract": "BPD",
            "label": "poolYearPercentages",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts/BPD.sol:25"
          },
          {
            "contract": "BPD",
            "label": "mainToken",
            "type": "t_address",
            "src": "contracts/BPD.sol:28"
          },
          {
            "contract": "BPD",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/BPD.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_array(t_bool)5_storage": {
            "label": "bool[5]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ff3de06201f851a0f3ae541c6a41e7ac874d824e0695868229a2edf10445f47b": {
      "address": "0xAD3BA005A4306E461aBE4eBCb3215DA18b7A2663",
      "txHash": "0x89a7b69b240eac3d965a28217465c7828d8b89f7d23a8b52cafe8526b39a9d34",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ForeignSwap",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:33"
          },
          {
            "contract": "ForeignSwap",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:34"
          },
          {
            "contract": "ForeignSwap",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:35"
          },
          {
            "contract": "ForeignSwap",
            "label": "maxClaimAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:36"
          },
          {
            "contract": "ForeignSwap",
            "label": "mainToken",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:39"
          },
          {
            "contract": "ForeignSwap",
            "label": "staking",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:40"
          },
          {
            "contract": "ForeignSwap",
            "label": "auction",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:41"
          },
          {
            "contract": "ForeignSwap",
            "label": "bigPayDayPool",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:42"
          },
          {
            "contract": "ForeignSwap",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:43"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:46"
          },
          {
            "contract": "ForeignSwap",
            "label": "totalSnapshotAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:47"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedAddresses",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:48"
          },
          {
            "contract": "ForeignSwap",
            "label": "totalSnapshotAddresses",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:49"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ForeignSwap.sol:52"
          },
          {
            "contract": "ForeignSwap",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/ForeignSwap.sol:55"
          },
          {
            "contract": "ForeignSwap",
            "label": "finalClaimedAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:62"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f27214edc68f3d0aa74a06407b8777709b2434b5bba6bdb0e41d730b82f4245d": {
      "address": "0x05FE183e18B79013a68Ce78AFe5c01b049CfF6C1",
      "txHash": "0xc52f4158b86699f30c7dd8a75a61229b7aec55e8513fe8cb4a0429f15c3e110e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SubBalances",
            "label": "addresses",
            "type": "t_struct(Addresses)9473_storage",
            "src": "contracts/SubBalances.sol:53"
          },
          {
            "contract": "SubBalances",
            "label": "subBalancesV1",
            "type": "t_contract(ISubBalancesV1)16206",
            "src": "contracts/SubBalances.sol:54"
          },
          {
            "contract": "SubBalances",
            "label": "startTimestamp",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:61"
          },
          {
            "contract": "SubBalances",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:62"
          },
          {
            "contract": "SubBalances",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:63"
          },
          {
            "contract": "SubBalances",
            "label": "currentSharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:64"
          },
          {
            "contract": "SubBalances",
            "label": "subBalanceList",
            "type": "t_array(t_struct(SubBalance)9464_storage)5_storage",
            "src": "contracts/SubBalances.sol:66"
          },
          {
            "contract": "SubBalances",
            "label": "periods",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts/SubBalances.sol:67"
          },
          {
            "contract": "SubBalances",
            "label": "stakeSessions",
            "type": "t_mapping(t_uint256,t_struct(StakeSession)9453_storage)",
            "src": "contracts/SubBalances.sol:68"
          },
          {
            "contract": "SubBalances",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/SubBalances.sol:70"
          }
        ],
        "types": {
          "t_struct(Addresses)9473_storage": {
            "label": "struct SubBalances.Addresses"
          },
          "t_contract(ISubBalancesV1)16206": {
            "label": "contract ISubBalancesV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(SubBalance)9464_storage)5_storage": {
            "label": "struct SubBalances.SubBalance[5]"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_mapping(t_uint256,t_struct(StakeSession)9453_storage)": {
            "label": "mapping(uint256 => struct SubBalances.StakeSession)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "976bddb15a676b7883aadf3e07a39a951aa66badc1554042a640c0de3c085036": {
      "address": "0x3179cDb4928A0c6bB29e7aF9713e99F8B3245013",
      "txHash": "0xd8c8098d6e60530b59acc4d5303c0354f432c085efd955e0165797718a560416",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)7617_storage",
            "src": "contracts/Staking.sol:69"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)16109",
            "src": "contracts/Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:78"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:79"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:82"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:83"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:84"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:85"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)7610_storage))",
            "src": "contracts/Staking.sol:89"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Staking.sol:90"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)7593_storage)dyn_storage",
            "src": "contracts/Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Staking.sol:94"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:97"
          }
        ],
        "types": {
          "t_struct(Addresses)7617_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)16109": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)7610_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)7593_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dd5129dd2cb01d19e959b77523e13692b3b97232d8ded6aefc95442cabae3fa2": {
      "address": "0x1B70218Fb89f54CDF9E78a76753470Bf411eb2cA",
      "txHash": "0xcb63b269c3f219b3b0b32da7da2217106ba3fe1bc9fddf2ef3a5c019ac07377f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NativeSwap",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/NativeSwap.sol:29"
          },
          {
            "contract": "NativeSwap",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/NativeSwap.sol:30"
          },
          {
            "contract": "NativeSwap",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/NativeSwap.sol:31"
          },
          {
            "contract": "NativeSwap",
            "label": "swapToken",
            "type": "t_contract(IERC20)3293",
            "src": "contracts/NativeSwap.sol:33"
          },
          {
            "contract": "NativeSwap",
            "label": "mainToken",
            "type": "t_contract(IToken)16238",
            "src": "contracts/NativeSwap.sol:34"
          },
          {
            "contract": "NativeSwap",
            "label": "auction",
            "type": "t_contract(IAuction)16030",
            "src": "contracts/NativeSwap.sol:35"
          },
          {
            "contract": "NativeSwap",
            "label": "swapTokenBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NativeSwap.sol:37"
          },
          {
            "contract": "NativeSwap",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/NativeSwap.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20)3293": {
            "label": "contract IERC20"
          },
          "t_contract(IToken)16238": {
            "label": "contract IToken"
          },
          "t_contract(IAuction)16030": {
            "label": "contract IAuction"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "13626d8c27ba279c67e1a0958e6704ffac40494ad98b895062a98b70adaeb0a0": {
      "address": "0x1593442b8EEdEDD0582802C81a8782F02e9C0221",
      "txHash": "0x08763d1761176e91b15cd2a3c76c526e9a4e92b02aa2f534a753dc1c60dd57ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ForeignSwap",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:33"
          },
          {
            "contract": "ForeignSwap",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:34"
          },
          {
            "contract": "ForeignSwap",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:35"
          },
          {
            "contract": "ForeignSwap",
            "label": "maxClaimAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:36"
          },
          {
            "contract": "ForeignSwap",
            "label": "mainToken",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:39"
          },
          {
            "contract": "ForeignSwap",
            "label": "staking",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:40"
          },
          {
            "contract": "ForeignSwap",
            "label": "auction",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:41"
          },
          {
            "contract": "ForeignSwap",
            "label": "bigPayDayPool",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:42"
          },
          {
            "contract": "ForeignSwap",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:43"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:46"
          },
          {
            "contract": "ForeignSwap",
            "label": "totalSnapshotAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:47"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedAddresses",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:48"
          },
          {
            "contract": "ForeignSwap",
            "label": "totalSnapshotAddresses",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:49"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ForeignSwap.sol:52"
          },
          {
            "contract": "ForeignSwap",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/ForeignSwap.sol:55"
          },
          {
            "contract": "ForeignSwap",
            "label": "finalClaimedAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:62"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "abcc17e3d2398a9f05ec26b2f20a56eb3433ad8df4e21d243ae34c6bac19d168": {
      "address": "0x623Be7ADB3FBa961aF5d21EA9851C8b5B761cb34",
      "txHash": "0xe2f584be89ea742e36e5844ecef94d31be146ce3311397e040fd56ecb2107d66",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)7627_storage",
            "src": "contracts/Staking.sol:69"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)16124",
            "src": "contracts/Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:79"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:82"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:83"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:84"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:85"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)7620_storage))",
            "src": "contracts/Staking.sol:90"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)7603_storage)dyn_storage",
            "src": "contracts/Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Staking.sol:95"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:98"
          }
        ],
        "types": {
          "t_struct(Addresses)7627_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)16124": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)7620_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)7603_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f3c6e445cd12be2b773980859139e3f81ba44f91ba01ce23add4eae24aafc8ef": {
      "address": "0xE0e65df55313098a0f3D0aa336BcC4cA77F4EAB5",
      "txHash": "0xd17044aaa15acc713eedcbf09e5279ad493f42a7b87f0eae979b8ab813d4fc03",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)7627_storage",
            "src": "contracts/Staking.sol:69"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)15931",
            "src": "contracts/Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:79"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:82"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:83"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:84"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:85"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)7620_storage))",
            "src": "contracts/Staking.sol:90"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)7603_storage)dyn_storage",
            "src": "contracts/Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Staking.sol:95"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:98"
          }
        ],
        "types": {
          "t_struct(Addresses)7627_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)15931": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)7620_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)7603_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7853632e382a565d171cf4b38fca0de2da4472b695e2fc21ca2dac5114d2c472": {
      "address": "0x6bc67D5e221D76197E7a70fAE966011abbA407B7",
      "txHash": "0x0c745eadb44d14460c0f968e0d7845137c1d1fa9a15c3a3d91836c51ff49f684",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "AxionMineManager",
            "label": "mineAddresses",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/mining/AxionMineManager.sol:13"
          },
          {
            "contract": "AxionMineManager",
            "label": "uniswapFactory",
            "type": "t_contract(IUniswapV2Factory)2227",
            "src": "contracts/mining/AxionMineManager.sol:15"
          },
          {
            "contract": "AxionMineManager",
            "label": "rewardTokenAddress",
            "type": "t_address",
            "src": "contracts/mining/AxionMineManager.sol:17"
          },
          {
            "contract": "AxionMineManager",
            "label": "liqRepNFTAddress",
            "type": "t_address",
            "src": "contracts/mining/AxionMineManager.sol:18"
          },
          {
            "contract": "AxionMineManager",
            "label": "OG5555_25NFTAddress",
            "type": "t_address",
            "src": "contracts/mining/AxionMineManager.sol:19"
          },
          {
            "contract": "AxionMineManager",
            "label": "OG5555_100NFTAddress",
            "type": "t_address",
            "src": "contracts/mining/AxionMineManager.sol:20"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Factory)2227": {
            "label": "contract IUniswapV2Factory"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "01e6ad6d06498a71953bdf17a16ee1fc3cde59edb6417d2601abeab2ced5cb9a": {
      "address": "0x30441f1EF6Be5090219Ce60cbEcEeb9F236E5bE6",
      "txHash": "0x65081f9d5c3e4824bb479b19b4c6ef78ca2807574462c7294a916a8e8fbf8da0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "AxionMineManager",
            "label": "mineAddresses",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\mining\\AxionMineManager.sol:13"
          },
          {
            "contract": "AxionMineManager",
            "label": "uniswapFactory",
            "type": "t_contract(IUniswapV2Factory)6186",
            "src": "contracts\\mining\\AxionMineManager.sol:15"
          },
          {
            "contract": "AxionMineManager",
            "label": "rewardTokenAddress",
            "type": "t_address",
            "src": "contracts\\mining\\AxionMineManager.sol:17"
          },
          {
            "contract": "AxionMineManager",
            "label": "liqRepNFTAddress",
            "type": "t_address",
            "src": "contracts\\mining\\AxionMineManager.sol:18"
          },
          {
            "contract": "AxionMineManager",
            "label": "OG5555_25NFTAddress",
            "type": "t_address",
            "src": "contracts\\mining\\AxionMineManager.sol:19"
          },
          {
            "contract": "AxionMineManager",
            "label": "OG5555_100NFTAddress",
            "type": "t_address",
            "src": "contracts\\mining\\AxionMineManager.sol:20"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Factory)6186": {
            "label": "contract IUniswapV2Factory"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8ab451e314853fd5978c4796d7619d877a7e03402bf25ce9442fecf70f5a2c85": {
      "address": "0xaB3110763aA7F151106020dB4576A7af3b356223",
      "txHash": "0xc147c2314cd29cd2f2eff3a6d06766bde1b0755dc5e1d1aa48f8b4320f1810f3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "AxionMineManager",
            "label": "mineAddresses",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\mining\\AxionMineManager.sol:13"
          },
          {
            "contract": "AxionMineManager",
            "label": "uniswapFactory",
            "type": "t_contract(IUniswapV2Factory)6186",
            "src": "contracts\\mining\\AxionMineManager.sol:15"
          },
          {
            "contract": "AxionMineManager",
            "label": "rewardTokenAddress",
            "type": "t_address",
            "src": "contracts\\mining\\AxionMineManager.sol:17"
          },
          {
            "contract": "AxionMineManager",
            "label": "liqRepNFTAddress",
            "type": "t_address",
            "src": "contracts\\mining\\AxionMineManager.sol:18"
          },
          {
            "contract": "AxionMineManager",
            "label": "OG5555_25NFTAddress",
            "type": "t_address",
            "src": "contracts\\mining\\AxionMineManager.sol:19"
          },
          {
            "contract": "AxionMineManager",
            "label": "OG5555_100NFTAddress",
            "type": "t_address",
            "src": "contracts\\mining\\AxionMineManager.sol:20"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Factory)6186": {
            "label": "contract IUniswapV2Factory"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1bf0bdd6260087d6bf91067393ad6213b208ecadead9237beeea79f555cd1500": {
      "address": "0x6D1DCd95EAD0A96b1c120b25c4e1819CA4FDC963",
      "txHash": "0x2dbd602f41b0747b06309f6a5e3fa6a7823cf23569ca20a9a24a39b6f5ea03a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SubBalances",
            "label": "addresses",
            "type": "t_struct(Addresses)12210_storage",
            "src": "contracts/SubBalances.sol:50"
          },
          {
            "contract": "SubBalances",
            "label": "subBalancesV1",
            "type": "t_contract(ISubBalancesV1)19186",
            "src": "contracts/SubBalances.sol:51"
          },
          {
            "contract": "SubBalances",
            "label": "startTimestamp",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:58"
          },
          {
            "contract": "SubBalances",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:59"
          },
          {
            "contract": "SubBalances",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:60"
          },
          {
            "contract": "SubBalances",
            "label": "currentSharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:61"
          },
          {
            "contract": "SubBalances",
            "label": "subBalanceList",
            "type": "t_array(t_struct(SubBalance)12201_storage)5_storage",
            "src": "contracts/SubBalances.sol:63"
          },
          {
            "contract": "SubBalances",
            "label": "periods",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts/SubBalances.sol:64"
          },
          {
            "contract": "SubBalances",
            "label": "stakeSessions",
            "type": "t_mapping(t_uint256,t_struct(StakeSession)12190_storage)",
            "src": "contracts/SubBalances.sol:65"
          },
          {
            "contract": "SubBalances",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/SubBalances.sol:67"
          }
        ],
        "types": {
          "t_struct(Addresses)12210_storage": {
            "label": "struct SubBalances.Addresses"
          },
          "t_contract(ISubBalancesV1)19186": {
            "label": "contract ISubBalancesV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(SubBalance)12201_storage)5_storage": {
            "label": "struct SubBalances.SubBalance[5]"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_mapping(t_uint256,t_struct(StakeSession)12190_storage)": {
            "label": "mapping(uint256 => struct SubBalances.StakeSession)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9899e34f867d0464178e1329c37d4b86ca158c5179257fed8fbcc3c174607be4": {
      "address": "0xC9C78d4f00483b2c7F9Fe572dcb9c7223Af1DE41",
      "txHash": "0x68fef6d958df1e5bab6979d2907ac16e0b404807e1b3ac647dfaeadd449e26d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10057_storage",
            "src": "contracts/Staking.sol:82"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)19061",
            "src": "contracts/Staking.sol:83"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:93"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:94"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:95"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10050_storage))",
            "src": "contracts/Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10033_storage)dyn_storage",
            "src": "contracts/Staking.sol:105"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:110"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:111"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts/Staking.sol:112"
          }
        ],
        "types": {
          "t_struct(Addresses)10057_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)19061": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10050_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10033_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d0cd924cd731b79da5441c3ff634fc40fcac4076c401afcb235a89ec9f912cd8": {
      "address": "0x2002085B4fc7E810ABd68F6c3E77606e844074b4",
      "txHash": "0xecffd7e1e4a048979c857f9809b89d8bb0a079dcccb9862f883680fa7748ac63",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10056_storage",
            "src": "contracts/Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)19052",
            "src": "contracts/Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:90"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:93"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:94"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:95"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10049_storage))",
            "src": "contracts/Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10032_storage)dyn_storage",
            "src": "contracts/Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Staking.sol:106"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts/Staking.sol:110"
          }
        ],
        "types": {
          "t_struct(Addresses)10056_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)19052": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10049_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10032_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fe852fbd067e34ef400bbf54d71056a652c871ba5a78c03b097b2e23c3820ad8": {
      "address": "0x7199aCA67a51469b7182a2447fa4B31cf19b2440",
      "txHash": "0x751fddf797a24bc6100b8d5aa23829b4a51e5174dfb353eec4a7583946a6721e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10056_storage",
            "src": "contracts/Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)19060",
            "src": "contracts/Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:90"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:93"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:94"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:95"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10049_storage))",
            "src": "contracts/Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10032_storage)dyn_storage",
            "src": "contracts/Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Staking.sol:106"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts/Staking.sol:110"
          }
        ],
        "types": {
          "t_struct(Addresses)10056_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)19060": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10049_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10032_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9f47c6c181d013a12af7ec67ddfcc588df70044adaa79c7447558655b19f75be": {
      "address": "0x98574fd79817DF83D49A50A90831C2F046470122",
      "txHash": "0xbe348ecc75a98a06f3d611f5d60960eefbc593437945a47bec3fb555ff24d07a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10056_storage",
            "src": "contracts/Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)19056",
            "src": "contracts/Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:90"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:93"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:94"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:95"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10049_storage))",
            "src": "contracts/Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10032_storage)dyn_storage",
            "src": "contracts/Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Staking.sol:106"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts/Staking.sol:110"
          }
        ],
        "types": {
          "t_struct(Addresses)10056_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)19056": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10049_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10032_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5f9fd1f766f4e8f84617aa45634c901a1f85fe8c0a444f439af761366542b2e7": {
      "address": "0xd825405Bc681CCc9CD808e72395602A40b123358",
      "txHash": "0x9299ae0a9350feac31e81f374218fca84670d7c1067082bad8c914af47f7e06e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10056_storage",
            "src": "contracts/Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)19011",
            "src": "contracts/Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:90"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:93"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:94"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:95"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10049_storage))",
            "src": "contracts/Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10032_storage)dyn_storage",
            "src": "contracts/Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Staking.sol:106"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts/Staking.sol:110"
          }
        ],
        "types": {
          "t_struct(Addresses)10056_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)19011": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10049_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10032_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f9a6f1dfcaedbfd9c65001069cc3b66589b6502c3fe5cce71f3d64d944e66ea5": {
      "address": "0x3509c418079895Bee6b47537Fb9559d9819C297F",
      "txHash": "0xd972a2f1482a4a567474bb9779ed4bdef3c66fab38d1880770e224269f6076a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10056_storage",
            "src": "contracts/Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)19011",
            "src": "contracts/Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:90"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:93"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:94"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:95"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10049_storage))",
            "src": "contracts/Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10032_storage)dyn_storage",
            "src": "contracts/Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Staking.sol:106"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts/Staking.sol:110"
          }
        ],
        "types": {
          "t_struct(Addresses)10056_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)19011": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10049_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10032_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2dc8d5763a35c3c301d7cf4d2b33d74a67b0c37ef33704fa557f96352c4f525a": {
      "address": "0x1C7D80a19B42B1DeFba52b2dF150Ee8ED503dC70",
      "txHash": "0xe2db23c37d1bb1198ba0ed65ce43725c6e91fe2c3a3381eb49c1aa91f46e320f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)6897_storage)",
            "src": "contracts\\Auction.sol:81"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Auction.sol:82"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)6904_storage))",
            "src": "contracts\\Auction.sol:83"
          },
          {
            "contract": "Auction",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\Auction.sol:84"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:87"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:88"
          },
          {
            "contract": "Auction",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:89"
          },
          {
            "contract": "Auction",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:90"
          },
          {
            "contract": "Auction",
            "label": "options",
            "type": "t_struct(Options)6926_storage",
            "src": "contracts\\Auction.sol:92"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)6913_storage",
            "src": "contracts\\Auction.sol:93"
          },
          {
            "contract": "Auction",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)20019",
            "src": "contracts\\Auction.sol:94"
          },
          {
            "contract": "Auction",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Auction.sol:96"
          },
          {
            "contract": "Auction",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Auction.sol:98"
          },
          {
            "contract": "Auction",
            "label": "middlePriceDays",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:100"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)6997_storage)7_storage",
            "src": "contracts\\Auction.sol:112"
          },
          {
            "contract": "Auction",
            "label": "ventureAutoStakeDays",
            "type": "t_uint8",
            "src": "contracts\\Auction.sol:113"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)6897_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionReserves)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)6904_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Auction.UserBid))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)6926_storage": {
            "label": "struct Auction.Options"
          },
          "t_struct(Addresses)6913_storage": {
            "label": "struct Auction.Addresses"
          },
          "t_contract(IAuctionV1)20019": {
            "label": "contract IAuctionV1"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_struct(AuctionData)6997_storage)7_storage": {
            "label": "struct Auction.AuctionData[7]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bb33fb59ea401639814dcf1acb13d2ff07e98c11c6beeb594929065cba8690e1": {
      "address": "0x28f6ad40F711665173B350E29034FCA16EC15a41",
      "txHash": "0x29bc826e1d34399edda0fcfe8f9d09df89edf0dbf9ad15b7fa2f33e99b77f9f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SubBalances",
            "label": "addresses",
            "type": "t_struct(Addresses)13245_storage",
            "src": "contracts\\SubBalances.sol:50"
          },
          {
            "contract": "SubBalances",
            "label": "subBalancesV1",
            "type": "t_contract(ISubBalancesV1)20243",
            "src": "contracts\\SubBalances.sol:51"
          },
          {
            "contract": "SubBalances",
            "label": "startTimestamp",
            "type": "t_uint256",
            "src": "contracts\\SubBalances.sol:58"
          },
          {
            "contract": "SubBalances",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\SubBalances.sol:59"
          },
          {
            "contract": "SubBalances",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\SubBalances.sol:60"
          },
          {
            "contract": "SubBalances",
            "label": "currentSharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\SubBalances.sol:61"
          },
          {
            "contract": "SubBalances",
            "label": "subBalanceList",
            "type": "t_array(t_struct(SubBalance)13236_storage)5_storage",
            "src": "contracts\\SubBalances.sol:63"
          },
          {
            "contract": "SubBalances",
            "label": "periods",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts\\SubBalances.sol:64"
          },
          {
            "contract": "SubBalances",
            "label": "stakeSessions",
            "type": "t_mapping(t_uint256,t_struct(StakeSession)13225_storage)",
            "src": "contracts\\SubBalances.sol:65"
          },
          {
            "contract": "SubBalances",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\SubBalances.sol:67"
          }
        ],
        "types": {
          "t_struct(Addresses)13245_storage": {
            "label": "struct SubBalances.Addresses"
          },
          "t_contract(ISubBalancesV1)20243": {
            "label": "contract ISubBalancesV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(SubBalance)13236_storage)5_storage": {
            "label": "struct SubBalances.SubBalance[5]"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_mapping(t_uint256,t_struct(StakeSession)13225_storage)": {
            "label": "mapping(uint256 => struct SubBalances.StakeSession)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "97c1abccf9990ff08b7a0904925c53e7c723ac09a2b2682a57c9f5dab21ec013": {
      "address": "0x41e9FE5Fe1099fABa7A6494D723BFaC9358e39c4",
      "txHash": "0x70ea9911c87a2c7e0818ac385487fb13f2998de5eddf30da10161859220326d1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10635_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20118",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10628_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10611_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10635_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20118": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10628_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10611_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "df0aa5538f81fe9ac412ca1588f05c9cd572211c9f11f2406ecac6ceb2b9d30f": {
      "address": "0x69f27ce7Bb6F16c517d32148288648BF8A6C522E",
      "txHash": "0x9be312ac2e3c1e5bddf42cc837fa99be104e7c08a98af2a85ce15127d11ac191",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10635_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20129",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10628_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10611_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10635_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20129": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10628_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10611_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "82638dba3068c8755dcfbf375a1de40e5fec2b0107012da5d17e12338239de6d": {
      "address": "0x579F2988648F50b17C8c50B1547e0EC64274E93b",
      "txHash": "0x55bcac4885b67c16521aea4531712cdc0fea26d9c1e04992b01edb519a4f04ec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10635_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20129",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10628_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10611_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10635_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20129": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10628_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10611_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9f6b78143fc574066704599ad82deb5b6e90de611c416d3371365e4863db1a7b": {
      "address": "0xdFC9a2394F9558e8d9743C9f177655a4F53A1781",
      "txHash": "0xfc17b18cd8a802a3476a20ab5e97f6d86e653c1420d17307a737780f2ab6f0a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10635_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20129",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10628_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10611_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10635_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20129": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10628_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10611_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "754876c4fe9d35ead9589127b36a25347b3a97eeb661e3268e12f86fd2b420b0": {
      "address": "0x89cD599380d554975ED93fd61753cB839fbBFF88",
      "txHash": "0x561b186e3c9c28a2aa574ed19109fb322906a1fa75ce8fa63c2d0e8ab0943c52",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "AuctionManager",
            "label": "mintedBPD",
            "type": "t_uint256",
            "src": "contracts\\AuctionManager.sol:45"
          },
          {
            "contract": "AuctionManager",
            "label": "mintedAuction",
            "type": "t_uint256",
            "src": "contracts\\AuctionManager.sol:46"
          },
          {
            "contract": "AuctionManager",
            "label": "addresses",
            "type": "t_struct(Addresses)8899_storage",
            "src": "contracts\\AuctionManager.sol:47"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Addresses)8899_storage": {
            "label": "struct AuctionManager.Addresses"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "544d6fce024ef2aebb588669b3bafd5d169a34dfa1c7507416dbc2ab83a67775": {
      "address": "0x1c492B1508CF386BDC114C125bf28Db17C206870",
      "txHash": "0xc4481724f4c84b642e20c60a96e2ec0a7a02040f19f44c7ae42cbc5a39063a60",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10635_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20134",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10628_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10611_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10635_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20134": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10628_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10611_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6cccc505d9e7d11031aa5a8e59881bda42334a8da91697f67a4400a02216aee7": {
      "address": "0x9C5913f64354481A31Af6c13C3950eDD3BD96Bc4",
      "txHash": "0xab53845ba26cb74588f55ab4abef241e8022388d111e4c23bc4006160bcedabe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)6897_storage)",
            "src": "contracts\\Auction.sol:81"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Auction.sol:82"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)6904_storage))",
            "src": "contracts\\Auction.sol:83"
          },
          {
            "contract": "Auction",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\Auction.sol:84"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:87"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:88"
          },
          {
            "contract": "Auction",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:89"
          },
          {
            "contract": "Auction",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:90"
          },
          {
            "contract": "Auction",
            "label": "options",
            "type": "t_struct(Options)6926_storage",
            "src": "contracts\\Auction.sol:92"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)6913_storage",
            "src": "contracts\\Auction.sol:93"
          },
          {
            "contract": "Auction",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)20066",
            "src": "contracts\\Auction.sol:94"
          },
          {
            "contract": "Auction",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Auction.sol:96"
          },
          {
            "contract": "Auction",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Auction.sol:98"
          },
          {
            "contract": "Auction",
            "label": "middlePriceDays",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:100"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)6997_storage)7_storage",
            "src": "contracts\\Auction.sol:112"
          },
          {
            "contract": "Auction",
            "label": "ventureAutoStakeDays",
            "type": "t_uint8",
            "src": "contracts\\Auction.sol:113"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)6897_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionReserves)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)6904_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Auction.UserBid))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)6926_storage": {
            "label": "struct Auction.Options"
          },
          "t_struct(Addresses)6913_storage": {
            "label": "struct Auction.Addresses"
          },
          "t_contract(IAuctionV1)20066": {
            "label": "contract IAuctionV1"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_struct(AuctionData)6997_storage)7_storage": {
            "label": "struct Auction.AuctionData[7]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "681b62d119c8adde9fe4d48c718054e346762dd58795ebf91d9eee5d9cc0f4a8": {
      "address": "0xe5e1676946255c903c0feBC39A75CDa8e715fBd1",
      "txHash": "0x3fc0601d5a19544d6083c6e2701b6a75e7bf04040203aaf04eabdfbaf0b7dc70",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10659_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20165",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10635_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10659_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20165": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10635_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8b299214a0eae96becb2dceddb7c7ff3c24f6d289eafb0d98045fba2209a52fb": {
      "address": "0xc39C50383d4a1ee05166aC20143D4566858E5b75",
      "txHash": "0xbb2a9267b90f37a2296360e58336ad33224c2143675ca77a60a4549dc469d6de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10659_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20165",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10635_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10659_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20165": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10635_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ae5e4abc834ae1665d76f14dbb1bd3089adb33190204fe46f94e0d44775ccd5a": {
      "address": "0xfF9EA5e706C10b0EFD9A03f85fB41FC563571354",
      "txHash": "0x42833e83f1dc6e0206be0bf0c38b3161eccf06fedf016b0a3e16980aa7c5f6a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10659_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20165",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10635_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10659_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20165": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10635_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "62f7764bea14e45f6379692de68b1dc97a0c3c2c31ca8faead0302519014e1ad": {
      "address": "0x07f1e2147338642ddfF112EF0836B32Ea80f97Dc",
      "txHash": "0x27ab0dff8d54bf64b824bd517bb238542e213f14f964dcb9d96e3816886cdff8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10659_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20163",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10635_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10659_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20163": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10635_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "82e7cc7b86d592b4f09c1a0e1e3ed6b412aaa30b8d5f71971fa6466cd74567e9": {
      "address": "0xDe1f9378f544b306beD4A579Ca329Fab8F1dD14E",
      "txHash": "0x7fa8e7a97aef67a30536e74122d45fdec711f5d9c03d171cc35c2503be80248f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10659_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20158",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10635_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10659_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20158": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10635_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4090acd8a925843b846b0f9b008b7b38b030058694459db73bf113874739a40a": {
      "address": "0x4C7C05ba0Cf2f40B7c64A67b62f7669EC85E8852",
      "txHash": "0xe5c7f87a9cac2e2f3712ce64f0d6a29f700fa1fbcd3729c3ee6c06857d47a5cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10659_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20161",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10635_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10659_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20161": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10635_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b328a77af15478c2b13b2180f86815c6e1fa51d6a88ef7336c9cc32a5e0bc5b9": {
      "address": "0x6510D52d53555a14aA9b2E84f182c83C9d0535Ab",
      "txHash": "0xfd097a092def3f1287fd42280540463cd8d54d2f0dfacfeb900b4c83a5103a62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10659_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20162",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10635_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10659_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20162": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10635_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "72a039f6d5845b0c7c36a0e7ceee9502a8cd9fd8c8f302e37e5c831db6e3abf2": {
      "address": "0xf778b0941398D350e81F2B3BA1CdeD3A5fb32922",
      "txHash": "0xc24a9607a0431b3c8703ba9244660daa00911d03f0cdffc540621f08a0fba3cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10659_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20165",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10635_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          }
        ],
        "types": {
          "t_struct(Addresses)10659_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20165": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10652_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10635_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "03e324c13bfea5d437b4eb792e1c65f6a598422e6d663bdf51c92f2b3670b768": {
      "address": "0x715728Df9AE16fb677849894E657540662C69F1a",
      "txHash": "0xacb246adabec7dc88e010a8af6036648c8db6c3cbc10e78116250c083db45448",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)6897_storage)",
            "src": "contracts\\Auction.sol:81"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Auction.sol:82"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)6904_storage))",
            "src": "contracts\\Auction.sol:83"
          },
          {
            "contract": "Auction",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\Auction.sol:84"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:87"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:88"
          },
          {
            "contract": "Auction",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:89"
          },
          {
            "contract": "Auction",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:90"
          },
          {
            "contract": "Auction",
            "label": "options",
            "type": "t_struct(Options)6926_storage",
            "src": "contracts\\Auction.sol:92"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)6913_storage",
            "src": "contracts\\Auction.sol:93"
          },
          {
            "contract": "Auction",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)20189",
            "src": "contracts\\Auction.sol:94"
          },
          {
            "contract": "Auction",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Auction.sol:96"
          },
          {
            "contract": "Auction",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Auction.sol:98"
          },
          {
            "contract": "Auction",
            "label": "middlePriceDays",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:100"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)6997_storage)7_storage",
            "src": "contracts\\Auction.sol:112"
          },
          {
            "contract": "Auction",
            "label": "ventureAutoStakeDays",
            "type": "t_uint8",
            "src": "contracts\\Auction.sol:113"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)6897_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionReserves)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)6904_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Auction.UserBid))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)6926_storage": {
            "label": "struct Auction.Options"
          },
          "t_struct(Addresses)6913_storage": {
            "label": "struct Auction.Addresses"
          },
          "t_contract(IAuctionV1)20189": {
            "label": "contract IAuctionV1"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_struct(AuctionData)6997_storage)7_storage": {
            "label": "struct Auction.AuctionData[7]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9a8117d0d18f369b9dac5518a62ab1a78a3abc71504efa0182d205aec09cdf2c": {
      "address": "0xfb8Be4BC24528886514936f23cB6803fbC5071E3",
      "txHash": "0x7e6303cd8fbb63b90367f45a89b03c3d744271ca5c1a275c8191656a6e9ecd5d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10648_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20288",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10641_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10624_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:122"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:123"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:124"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:125"
          }
        ],
        "types": {
          "t_struct(Addresses)10648_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20288": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10641_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10624_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4b1de335c5946b22e58bff52d03ad4c4b37b8d3d25c22b40f07e64ed9e054823": {
      "address": "0x389a41E20f829b61677A3Adb107fCf539EA31e41",
      "txHash": "0x4445f5138fa2dc13229e0096abe2c5bbdeee2d46f5fa5f0f19dcd206c8d58092",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10648_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20290",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10641_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10624_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:122"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:123"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:124"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:125"
          }
        ],
        "types": {
          "t_struct(Addresses)10648_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20290": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10641_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10624_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5c4d5258d9978b99a0876b26a7756a78ec8f070159f55549dfcba353d2452101": {
      "address": "0x54bb26eF03DFB8F35df086E109cbE686126F66E5",
      "txHash": "0x67a778c1a3445bf548c57a8828deec25ee8759ec295a4d8c65653350cf6e48e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10648_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20369",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10641_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10624_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:122"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:124"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:125"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:127"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:128"
          }
        ],
        "types": {
          "t_struct(Addresses)10648_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20369": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10641_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10624_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2bfa36edc1f3dd5b15950fa3ea1a14ea39fb8dbf98130a395906410fe7273e17": {
      "address": "0x19695B8525Ab76B42F66C77478E603D353cbbD68",
      "txHash": "0x8cc9cce2757d10804c2a87980bd5213a6998dc2b613df2cab422a454b3dec7e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)6897_storage)",
            "src": "contracts\\Auction.sol:81"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Auction.sol:82"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)6904_storage))",
            "src": "contracts\\Auction.sol:83"
          },
          {
            "contract": "Auction",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\Auction.sol:84"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:87"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:88"
          },
          {
            "contract": "Auction",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:89"
          },
          {
            "contract": "Auction",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:90"
          },
          {
            "contract": "Auction",
            "label": "options",
            "type": "t_struct(Options)6926_storage",
            "src": "contracts\\Auction.sol:92"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)6913_storage",
            "src": "contracts\\Auction.sol:93"
          },
          {
            "contract": "Auction",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)20339",
            "src": "contracts\\Auction.sol:94"
          },
          {
            "contract": "Auction",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Auction.sol:96"
          },
          {
            "contract": "Auction",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Auction.sol:98"
          },
          {
            "contract": "Auction",
            "label": "middlePriceDays",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:100"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)6997_storage)7_storage",
            "src": "contracts\\Auction.sol:112"
          },
          {
            "contract": "Auction",
            "label": "ventureAutoStakeDays",
            "type": "t_uint8",
            "src": "contracts\\Auction.sol:113"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)6897_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionReserves)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)6904_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Auction.UserBid))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)6926_storage": {
            "label": "struct Auction.Options"
          },
          "t_struct(Addresses)6913_storage": {
            "label": "struct Auction.Addresses"
          },
          "t_contract(IAuctionV1)20339": {
            "label": "contract IAuctionV1"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_struct(AuctionData)6997_storage)7_storage": {
            "label": "struct Auction.AuctionData[7]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8175dd79b99be0fa7b4fbcc1514fba601dd68bccf76785932d954a075996a3e6": {
      "address": "0x5305f5eC75cD6f518cc7F8Dc03c492e60B22C02E",
      "txHash": "0xfe2896b09215b9e5ae1e21b35be7c7da5b084c9053380c3e0ffad33781c7a79a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10642_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20440",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10635_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10618_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:122"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:124"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:125"
          },
          {
            "contract": "Staking",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Staking.sol:127"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:128"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:129"
          }
        ],
        "types": {
          "t_struct(Addresses)10642_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20440": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10635_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10618_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f8566adb9258376bab0d4182c7a9f05d9d414c17a506ad867915c741a1a12e35": {
      "address": "0xb9aDcBfe7D54D91dc18dae8bAb5D1612813E0D54",
      "txHash": "0xc38de43b010e11fed0f2c20c4419002d1e091720fb9c89ecbbee3efe4d8e769c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)6897_storage)",
            "src": "contracts\\Auction.sol:81"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Auction.sol:82"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)6904_storage))",
            "src": "contracts\\Auction.sol:83"
          },
          {
            "contract": "Auction",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\Auction.sol:84"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:87"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:88"
          },
          {
            "contract": "Auction",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:89"
          },
          {
            "contract": "Auction",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:90"
          },
          {
            "contract": "Auction",
            "label": "options",
            "type": "t_struct(Options)6926_storage",
            "src": "contracts\\Auction.sol:92"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)6913_storage",
            "src": "contracts\\Auction.sol:93"
          },
          {
            "contract": "Auction",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)20236",
            "src": "contracts\\Auction.sol:94"
          },
          {
            "contract": "Auction",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Auction.sol:96"
          },
          {
            "contract": "Auction",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Auction.sol:98"
          },
          {
            "contract": "Auction",
            "label": "middlePriceDays",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:100"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)6997_storage)7_storage",
            "src": "contracts\\Auction.sol:113"
          },
          {
            "contract": "Auction",
            "label": "ventureAutoStakeDays",
            "type": "t_uint8",
            "src": "contracts\\Auction.sol:114"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)6897_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionReserves)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)6904_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Auction.UserBid))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)6926_storage": {
            "label": "struct Auction.Options"
          },
          "t_struct(Addresses)6913_storage": {
            "label": "struct Auction.Addresses"
          },
          "t_contract(IAuctionV1)20236": {
            "label": "contract IAuctionV1"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_struct(AuctionData)6997_storage)7_storage": {
            "label": "struct Auction.AuctionData[7]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "09c232477f11212d1daad839f56eca8488cff5fd5c3210e96abe82beb07c6665": {
      "address": "0xaE6CB551693CC1Aa568f5e71558f4Fb763583cfA",
      "txHash": "0x7d64d5f80c06ce3b33d5d46ca890e614a1f5d553063e880e19fd65ab8964e906",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10524_storage",
            "src": "contracts\\Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20337",
            "src": "contracts\\Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:105"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:106"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10517_storage))",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:113"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10500_storage)dyn_storage",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:122"
          },
          {
            "contract": "Staking",
            "label": "maxShareMaxDays",
            "type": "t_uint16",
            "src": "contracts\\Staking.sol:124"
          },
          {
            "contract": "Staking",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:125"
          },
          {
            "contract": "Staking",
            "label": "totalVcaRegisteredShares",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:127"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:129"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:130"
          },
          {
            "contract": "Staking",
            "label": "isVcaRegistered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Staking.sol:132"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:133"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:134"
          }
        ],
        "types": {
          "t_struct(Addresses)10524_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20337": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10517_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10500_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2722eef62b3980002e1266fae2a0924f0ab48cd3396fac63458a1411d9bd5060": {
      "address": "0xF0E2E4D9F214E8B1C899925a5769B0191B034eb0",
      "txHash": "0xd891b29f1a7573a1fde28f2790e11359e0f95e94ec5897c49b2bdb42e1513aad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "AxionMineManager",
            "label": "mineAddresses",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/mining/AxionMineManager.sol:13"
          },
          {
            "contract": "AxionMineManager",
            "label": "uniswapFactory",
            "type": "t_contract(IUniswapV2Factory)6736",
            "src": "contracts/mining/AxionMineManager.sol:15"
          },
          {
            "contract": "AxionMineManager",
            "label": "rewardTokenAddress",
            "type": "t_address",
            "src": "contracts/mining/AxionMineManager.sol:17"
          },
          {
            "contract": "AxionMineManager",
            "label": "liqRepNFTAddress",
            "type": "t_address",
            "src": "contracts/mining/AxionMineManager.sol:18"
          },
          {
            "contract": "AxionMineManager",
            "label": "OG5555_25NFTAddress",
            "type": "t_address",
            "src": "contracts/mining/AxionMineManager.sol:19"
          },
          {
            "contract": "AxionMineManager",
            "label": "OG5555_100NFTAddress",
            "type": "t_address",
            "src": "contracts/mining/AxionMineManager.sol:20"
          }
        ],
        "types": {
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IUniswapV2Factory)6736": {
            "label": "contract IUniswapV2Factory"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2088_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2088_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1823_storage"
              }
            ]
          },
          "t_struct(Set)1823_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "93c90a543340fb8c0b6f7342744ff7cd2f871244970ce95286c57af9169a8267": {
      "address": "0x6B04378cB254a7BB57C89bA7c06fE15BcC212d16",
      "txHash": "0x33e0c2d7c35de3908651e54790ca4e45bb0dfc7a9643bb3b8594a332c81a4990",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "AuctionManager",
            "label": "mintedBPD",
            "type": "t_uint256",
            "src": "contracts/AuctionManager.sol:45"
          },
          {
            "contract": "AuctionManager",
            "label": "mintedAuction",
            "type": "t_uint256",
            "src": "contracts/AuctionManager.sol:46"
          },
          {
            "contract": "AuctionManager",
            "label": "addresses",
            "type": "t_struct(Addresses)9365_storage",
            "src": "contracts/AuctionManager.sol:47"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Addresses)9365_storage": {
            "label": "struct AuctionManager.Addresses",
            "members": [
              {
                "label": "axion",
                "type": "t_address"
              },
              {
                "label": "auction",
                "type": "t_address"
              },
              {
                "label": "bpd",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2088_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2088_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1823_storage"
              }
            ]
          },
          "t_struct(Set)1823_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x403711a348692c38bE82CE9c29260f6F831386B9",
    "txHash": "0x8d5c0aab8163c692c00a6e05b5b9c90e053e49852b8fe5880491595a4cde1556"
  }
}
