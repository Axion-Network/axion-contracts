{
  "manifestVersion": "3.1",
  "impls": {
    "f0fc1ebfdafb1f061ef8b3eb8fc17ac42e9da8cbb1e1692a3d65d842bbff8759": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x49c6e179667e5ad89a44ae27840af4ac20ba71e5ccd7ed10545efe01d1bfe06b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)4379_storage)",
            "src": "contracts/Auction.sol:75"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Auction.sol:76"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)4386_storage))",
            "src": "contracts/Auction.sol:77"
          },
          {
            "contract": "Auction",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts/Auction.sol:78"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:81"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:82"
          },
          {
            "contract": "Auction",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:83"
          },
          {
            "contract": "Auction",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Auction.sol:84"
          },
          {
            "contract": "Auction",
            "label": "options",
            "type": "t_struct(Options)4408_storage",
            "src": "contracts/Auction.sol:86"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)4395_storage",
            "src": "contracts/Auction.sol:87"
          },
          {
            "contract": "Auction",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)13728",
            "src": "contracts/Auction.sol:88"
          },
          {
            "contract": "Auction",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Auction.sol:90"
          },
          {
            "contract": "Auction",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/Auction.sol:96"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)4379_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionReserves)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)4386_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Auction.UserBid))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)4408_storage": {
            "label": "struct Auction.Options"
          },
          "t_struct(Addresses)4395_storage": {
            "label": "struct Auction.Addresses"
          },
          "t_contract(IAuctionV1)13728": {
            "label": "contract IAuctionV1"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "544d9d58f68b991bb9f598cecb02793f6f08209f906191d673a18bd1dcd8faa1": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x38e6fa114d70ab953cdc16f737e02248ba129ce3a2b1e66e58beec9127c9f249",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Token",
            "label": "swapToken",
            "type": "t_contract(IERC20)3199",
            "src": "contracts/Token.sol:24"
          },
          {
            "contract": "Token",
            "label": "swapIsOver",
            "type": "t_bool",
            "src": "contracts/Token.sol:25"
          },
          {
            "contract": "Token",
            "label": "swapTokenBalance",
            "type": "t_uint256",
            "src": "contracts/Token.sol:26"
          },
          {
            "contract": "Token",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Token.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)3199": {
            "label": "contract IERC20"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4b969b27636e5d442e184ae2fcb79f836553c68ed79ef10c7a1244505b3cee16": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0xd2073de1bee944f7742b7e033755cb4d6e010fb80514972013adf206c9016b04",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NativeSwap",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/NativeSwap.sol:29"
          },
          {
            "contract": "NativeSwap",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts/NativeSwap.sol:30"
          },
          {
            "contract": "NativeSwap",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/NativeSwap.sol:31"
          },
          {
            "contract": "NativeSwap",
            "label": "swapToken",
            "type": "t_contract(IERC20)3199",
            "src": "contracts/NativeSwap.sol:33"
          },
          {
            "contract": "NativeSwap",
            "label": "mainToken",
            "type": "t_contract(IToken)13919",
            "src": "contracts/NativeSwap.sol:34"
          },
          {
            "contract": "NativeSwap",
            "label": "auction",
            "type": "t_contract(IAuction)13711",
            "src": "contracts/NativeSwap.sol:35"
          },
          {
            "contract": "NativeSwap",
            "label": "swapTokenBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NativeSwap.sol:37"
          },
          {
            "contract": "NativeSwap",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/NativeSwap.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20)3199": {
            "label": "contract IERC20"
          },
          "t_contract(IToken)13919": {
            "label": "contract IToken"
          },
          "t_contract(IAuction)13711": {
            "label": "contract IAuction"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "784536ee92931f4bd04754448228f91fdd34afd3ce4b29369101766e1f375571": {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x965d42ea69df875b3acb5b500a8f5d3b3a0934b329f1d2ff9e01142d73b83ceb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BPD",
            "label": "poolYearAmounts",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts/BPD.sol:23"
          },
          {
            "contract": "BPD",
            "label": "poolTransferred",
            "type": "t_array(t_bool)5_storage",
            "src": "contracts/BPD.sol:24"
          },
          {
            "contract": "BPD",
            "label": "poolYearPercentages",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts/BPD.sol:25"
          },
          {
            "contract": "BPD",
            "label": "mainToken",
            "type": "t_address",
            "src": "contracts/BPD.sol:28"
          },
          {
            "contract": "BPD",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/BPD.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_array(t_bool)5_storage": {
            "label": "bool[5]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8348c932e57ca565571addcabd9f4d8e5a41ff7120d6ba22ab7b6ee6b166df41": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x35022819abb67204d2f71e6e7eaa715d1b71297d41f6ce81d93dc942a9f9211c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ForeignSwap",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:33"
          },
          {
            "contract": "ForeignSwap",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:34"
          },
          {
            "contract": "ForeignSwap",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:35"
          },
          {
            "contract": "ForeignSwap",
            "label": "maxClaimAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:36"
          },
          {
            "contract": "ForeignSwap",
            "label": "mainToken",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:39"
          },
          {
            "contract": "ForeignSwap",
            "label": "staking",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:40"
          },
          {
            "contract": "ForeignSwap",
            "label": "auction",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:41"
          },
          {
            "contract": "ForeignSwap",
            "label": "bigPayDayPool",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:42"
          },
          {
            "contract": "ForeignSwap",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts/ForeignSwap.sol:43"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:46"
          },
          {
            "contract": "ForeignSwap",
            "label": "totalSnapshotAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:47"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedAddresses",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:48"
          },
          {
            "contract": "ForeignSwap",
            "label": "totalSnapshotAddresses",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:49"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ForeignSwap.sol:52"
          },
          {
            "contract": "ForeignSwap",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/ForeignSwap.sol:55"
          },
          {
            "contract": "ForeignSwap",
            "label": "finalClaimedAmount",
            "type": "t_uint256",
            "src": "contracts/ForeignSwap.sol:62"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "77c0e84b8ded5dd3b77ed669abfb179c11e25a01d2e51b7ad6a4b705620c55b4": {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x640f56dd0e2fef2ccfcc96ed5827a7ac2988eef94512e63ccbc32a9208364a4e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SubBalances",
            "label": "addresses",
            "type": "t_struct(Addresses)9241_storage",
            "src": "contracts/SubBalances.sol:53"
          },
          {
            "contract": "SubBalances",
            "label": "subBalancesV1",
            "type": "t_contract(ISubBalancesV1)13902",
            "src": "contracts/SubBalances.sol:54"
          },
          {
            "contract": "SubBalances",
            "label": "startTimestamp",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:61"
          },
          {
            "contract": "SubBalances",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:62"
          },
          {
            "contract": "SubBalances",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:63"
          },
          {
            "contract": "SubBalances",
            "label": "currentSharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/SubBalances.sol:64"
          },
          {
            "contract": "SubBalances",
            "label": "subBalanceList",
            "type": "t_array(t_struct(SubBalance)9232_storage)5_storage",
            "src": "contracts/SubBalances.sol:66"
          },
          {
            "contract": "SubBalances",
            "label": "periods",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts/SubBalances.sol:67"
          },
          {
            "contract": "SubBalances",
            "label": "stakeSessions",
            "type": "t_mapping(t_uint256,t_struct(StakeSession)9221_storage)",
            "src": "contracts/SubBalances.sol:68"
          },
          {
            "contract": "SubBalances",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/SubBalances.sol:70"
          }
        ],
        "types": {
          "t_struct(Addresses)9241_storage": {
            "label": "struct SubBalances.Addresses"
          },
          "t_contract(ISubBalancesV1)13902": {
            "label": "contract ISubBalancesV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(SubBalance)9232_storage)5_storage": {
            "label": "struct SubBalances.SubBalance[5]"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_mapping(t_uint256,t_struct(StakeSession)9221_storage)": {
            "label": "mapping(uint256 => struct SubBalances.StakeSession)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8530fc24b284fe356f6e6aed6b8702c974f0c6402d5116995efb65d0b2c068cf": {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0x217732443d51135bda183d09dc4ac5240c9995ce791e025f2e7223ccb85150ec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "AuctionManager",
            "label": "mintedBPD",
            "type": "t_uint256",
            "src": "contracts/AuctionManager.sol:45"
          },
          {
            "contract": "AuctionManager",
            "label": "mintedAuction",
            "type": "t_uint256",
            "src": "contracts/AuctionManager.sol:46"
          },
          {
            "contract": "AuctionManager",
            "label": "addresses",
            "type": "t_struct(Addresses)5829_storage",
            "src": "contracts/AuctionManager.sol:47"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Addresses)5829_storage": {
            "label": "struct AuctionManager.Addresses"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e91dc1cdd157a079786c6696727da213ac78b1308e3db1097727c7a429f26b1a": {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0xb646d6a24e30d95f39b1f1ec0a3c628919ee63ba5a002f0e345ccdf2ca2e0390",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)7526_storage",
            "src": "contracts/Staking.sol:71"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)13805",
            "src": "contracts/Staking.sol:72"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:82"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:83"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:84"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:85"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:88"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)7519_storage))",
            "src": "contracts/Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)7502_storage)dyn_storage",
            "src": "contracts/Staking.sol:93"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts/Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts/Staking.sol:99"
          }
        ],
        "types": {
          "t_struct(Addresses)7526_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)13805": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)7519_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)7502_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "txHash": "0x17762a6655da3cfa424faff942ffc49af9d649ee8cb19c20b54117a80bf9147b"
  }
}
