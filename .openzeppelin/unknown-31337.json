{
  "manifestVersion": "3.1",
  "impls": {
    "03e324c13bfea5d437b4eb792e1c65f6a598422e6d663bdf51c92f2b3670b768": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xbabf5662f3e15de557e0cc38a66626ff09a55c0bde07987aefdd84134401161a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)2496_storage)",
            "src": "contracts\\Auction.sol:81"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Auction.sol:82"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)2503_storage))",
            "src": "contracts\\Auction.sol:83"
          },
          {
            "contract": "Auction",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\Auction.sol:84"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:87"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:88"
          },
          {
            "contract": "Auction",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:89"
          },
          {
            "contract": "Auction",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:90"
          },
          {
            "contract": "Auction",
            "label": "options",
            "type": "t_struct(Options)2525_storage",
            "src": "contracts\\Auction.sol:92"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)2512_storage",
            "src": "contracts\\Auction.sol:93"
          },
          {
            "contract": "Auction",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)4511",
            "src": "contracts\\Auction.sol:94"
          },
          {
            "contract": "Auction",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Auction.sol:96"
          },
          {
            "contract": "Auction",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Auction.sol:98"
          },
          {
            "contract": "Auction",
            "label": "middlePriceDays",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:100"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)2596_storage)7_storage",
            "src": "contracts\\Auction.sol:112"
          },
          {
            "contract": "Auction",
            "label": "ventureAutoStakeDays",
            "type": "t_uint8",
            "src": "contracts\\Auction.sol:113"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)2496_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionReserves)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)2503_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Auction.UserBid))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)2525_storage": {
            "label": "struct Auction.Options"
          },
          "t_struct(Addresses)2512_storage": {
            "label": "struct Auction.Addresses"
          },
          "t_contract(IAuctionV1)4511": {
            "label": "contract IAuctionV1"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_struct(AuctionData)2596_storage)7_storage": {
            "label": "struct Auction.AuctionData[7]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d8f5c5eaa9d6f3a48d2844343ada6fca53dace3e2dddb2be993281676338f52e": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xd8b38947e997f1e6fa2e90211e12878be9b8bef3cefa2356b21b84cb4c4d5e1d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:312"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Token",
            "label": "swapToken",
            "type": "t_contract(IERC20)3361",
            "src": "contracts\\Token.sol:29"
          },
          {
            "contract": "Token",
            "label": "swapIsOver",
            "type": "t_bool",
            "src": "contracts\\Token.sol:30"
          },
          {
            "contract": "Token",
            "label": "swapTokenBalance",
            "type": "t_uint256",
            "src": "contracts\\Token.sol:31"
          },
          {
            "contract": "Token",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Token.sol:32"
          }
        ],
        "types": {
          "t_contract(IERC20)3361": {
            "label": "contract IERC20"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dd5129dd2cb01d19e959b77523e13692b3b97232d8ded6aefc95442cabae3fa2": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0xa19de5a19ef0de03d1a3e00af2fa67376a98daff1a5e79244279f08e9ce09633",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NativeSwap",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts\\NativeSwap.sol:29"
          },
          {
            "contract": "NativeSwap",
            "label": "period",
            "type": "t_uint256",
            "src": "contracts\\NativeSwap.sol:30"
          },
          {
            "contract": "NativeSwap",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\NativeSwap.sol:31"
          },
          {
            "contract": "NativeSwap",
            "label": "swapToken",
            "type": "t_contract(IERC20)3361",
            "src": "contracts\\NativeSwap.sol:33"
          },
          {
            "contract": "NativeSwap",
            "label": "mainToken",
            "type": "t_contract(IToken)20397",
            "src": "contracts\\NativeSwap.sol:34"
          },
          {
            "contract": "NativeSwap",
            "label": "auction",
            "type": "t_contract(IAuction)20139",
            "src": "contracts\\NativeSwap.sol:35"
          },
          {
            "contract": "NativeSwap",
            "label": "swapTokenBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\NativeSwap.sol:37"
          },
          {
            "contract": "NativeSwap",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\NativeSwap.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20)3361": {
            "label": "contract IERC20"
          },
          "t_contract(IToken)20397": {
            "label": "contract IToken"
          },
          "t_contract(IAuction)20139": {
            "label": "contract IAuction"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "11aa87abdf08bad8bb60ab16cc02f527fd4750bd496a07c383ab4b7789f2c3c7": {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x4ec5b4ca7feb3cae99e0ef006d46f8c8a59c43a6de3e8563a7c860c16a7da49e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BPD",
            "label": "poolYearAmounts",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts\\BPD.sol:23"
          },
          {
            "contract": "BPD",
            "label": "poolTransferred",
            "type": "t_array(t_bool)5_storage",
            "src": "contracts\\BPD.sol:24"
          },
          {
            "contract": "BPD",
            "label": "poolYearPercentages",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts\\BPD.sol:25"
          },
          {
            "contract": "BPD",
            "label": "mainToken",
            "type": "t_address",
            "src": "contracts\\BPD.sol:28"
          },
          {
            "contract": "BPD",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\BPD.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_array(t_bool)5_storage": {
            "label": "bool[5]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "13626d8c27ba279c67e1a0958e6704ffac40494ad98b895062a98b70adaeb0a0": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xc1e7a58a5463e43e445cdf2e407382067e4bd0c7d48e5cb3c31e4a980bf09bf6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ForeignSwap",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts\\ForeignSwap.sol:33"
          },
          {
            "contract": "ForeignSwap",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\ForeignSwap.sol:34"
          },
          {
            "contract": "ForeignSwap",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "contracts\\ForeignSwap.sol:35"
          },
          {
            "contract": "ForeignSwap",
            "label": "maxClaimAmount",
            "type": "t_uint256",
            "src": "contracts\\ForeignSwap.sol:36"
          },
          {
            "contract": "ForeignSwap",
            "label": "mainToken",
            "type": "t_address",
            "src": "contracts\\ForeignSwap.sol:39"
          },
          {
            "contract": "ForeignSwap",
            "label": "staking",
            "type": "t_address",
            "src": "contracts\\ForeignSwap.sol:40"
          },
          {
            "contract": "ForeignSwap",
            "label": "auction",
            "type": "t_address",
            "src": "contracts\\ForeignSwap.sol:41"
          },
          {
            "contract": "ForeignSwap",
            "label": "bigPayDayPool",
            "type": "t_address",
            "src": "contracts\\ForeignSwap.sol:42"
          },
          {
            "contract": "ForeignSwap",
            "label": "signerAddress",
            "type": "t_address",
            "src": "contracts\\ForeignSwap.sol:43"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedAmount",
            "type": "t_uint256",
            "src": "contracts\\ForeignSwap.sol:46"
          },
          {
            "contract": "ForeignSwap",
            "label": "totalSnapshotAmount",
            "type": "t_uint256",
            "src": "contracts\\ForeignSwap.sol:47"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedAddresses",
            "type": "t_uint256",
            "src": "contracts\\ForeignSwap.sol:48"
          },
          {
            "contract": "ForeignSwap",
            "label": "totalSnapshotAddresses",
            "type": "t_uint256",
            "src": "contracts\\ForeignSwap.sol:49"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\ForeignSwap.sol:52"
          },
          {
            "contract": "ForeignSwap",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\ForeignSwap.sol:55"
          },
          {
            "contract": "ForeignSwap",
            "label": "finalClaimedAmount",
            "type": "t_uint256",
            "src": "contracts\\ForeignSwap.sol:62"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bb33fb59ea401639814dcf1acb13d2ff07e98c11c6beeb594929065cba8690e1": {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x82f8796f54547b4f4a7b9bf6b17608e73b0ea4ffd83adc92c08b3da24650328d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SubBalances",
            "label": "addresses",
            "type": "t_struct(Addresses)13382_storage",
            "src": "contracts\\SubBalances.sol:50"
          },
          {
            "contract": "SubBalances",
            "label": "subBalancesV1",
            "type": "t_contract(ISubBalancesV1)20380",
            "src": "contracts\\SubBalances.sol:51"
          },
          {
            "contract": "SubBalances",
            "label": "startTimestamp",
            "type": "t_uint256",
            "src": "contracts\\SubBalances.sol:58"
          },
          {
            "contract": "SubBalances",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\SubBalances.sol:59"
          },
          {
            "contract": "SubBalances",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\SubBalances.sol:60"
          },
          {
            "contract": "SubBalances",
            "label": "currentSharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\SubBalances.sol:61"
          },
          {
            "contract": "SubBalances",
            "label": "subBalanceList",
            "type": "t_array(t_struct(SubBalance)13373_storage)5_storage",
            "src": "contracts\\SubBalances.sol:63"
          },
          {
            "contract": "SubBalances",
            "label": "periods",
            "type": "t_array(t_uint256)5_storage",
            "src": "contracts\\SubBalances.sol:64"
          },
          {
            "contract": "SubBalances",
            "label": "stakeSessions",
            "type": "t_mapping(t_uint256,t_struct(StakeSession)13362_storage)",
            "src": "contracts\\SubBalances.sol:65"
          },
          {
            "contract": "SubBalances",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\SubBalances.sol:67"
          }
        ],
        "types": {
          "t_struct(Addresses)13382_storage": {
            "label": "struct SubBalances.Addresses"
          },
          "t_contract(ISubBalancesV1)20380": {
            "label": "contract ISubBalancesV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(SubBalance)13373_storage)5_storage": {
            "label": "struct SubBalances.SubBalance[5]"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_mapping(t_uint256,t_struct(StakeSession)13362_storage)": {
            "label": "mapping(uint256 => struct SubBalances.StakeSession)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6194121899116b52a25c9d26029c8a4b6b31992275ed5fe57bd1935ed2a6dd86": {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0xea8a0e7234d9c8252767a97bf3effbc2e6a8104343c1c1ff30812ded9fcf4f1c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10648_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20255",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10641_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10624_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          },
          {
            "contract": "Staking",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:124"
          }
        ],
        "types": {
          "t_struct(Addresses)10648_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20255": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10641_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10624_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "754876c4fe9d35ead9589127b36a25347b3a97eeb661e3268e12f86fd2b420b0": {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0x7001b331af54d6a6c18b2b232377b4390ab29c5beabeb894dac6a6e79734bd98",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "AuctionManager",
            "label": "mintedBPD",
            "type": "t_uint256",
            "src": "contracts\\AuctionManager.sol:45"
          },
          {
            "contract": "AuctionManager",
            "label": "mintedAuction",
            "type": "t_uint256",
            "src": "contracts\\AuctionManager.sol:46"
          },
          {
            "contract": "AuctionManager",
            "label": "addresses",
            "type": "t_struct(Addresses)8912_storage",
            "src": "contracts\\AuctionManager.sol:47"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Addresses)8912_storage": {
            "label": "struct AuctionManager.Addresses"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c337618c354d9ea798c92bc52c4a4e277c75ea2627d7789c01b8e4bd67bc50f7": {
      "address": "0x1459213733F023b55444487eE9385A8266FD0F08",
      "txHash": "0x4c5258bb9283d4f9e0c12a824f9f75d40f6fb03649fdc3aa6c3529e82b3de799",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)6897_storage)",
            "src": "contracts\\Auction.sol:81"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Auction.sol:82"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)6904_storage))",
            "src": "contracts\\Auction.sol:83"
          },
          {
            "contract": "Auction",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "contracts\\Auction.sol:84"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:87"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:88"
          },
          {
            "contract": "Auction",
            "label": "start",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:89"
          },
          {
            "contract": "Auction",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:90"
          },
          {
            "contract": "Auction",
            "label": "options",
            "type": "t_struct(Options)6926_storage",
            "src": "contracts\\Auction.sol:92"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)6913_storage",
            "src": "contracts\\Auction.sol:93"
          },
          {
            "contract": "Auction",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)20156",
            "src": "contracts\\Auction.sol:94"
          },
          {
            "contract": "Auction",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Auction.sol:96"
          },
          {
            "contract": "Auction",
            "label": "autoStakeDaysOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Auction.sol:98"
          },
          {
            "contract": "Auction",
            "label": "middlePriceDays",
            "type": "t_uint256",
            "src": "contracts\\Auction.sol:100"
          },
          {
            "contract": "Auction",
            "label": "auctions",
            "type": "t_array(t_struct(AuctionData)6997_storage)7_storage",
            "src": "contracts\\Auction.sol:112"
          },
          {
            "contract": "Auction",
            "label": "ventureAutoStakeDays",
            "type": "t_uint8",
            "src": "contracts\\Auction.sol:113"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)6897_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionReserves)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)6904_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Auction.UserBid))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)6926_storage": {
            "label": "struct Auction.Options"
          },
          "t_struct(Addresses)6913_storage": {
            "label": "struct Auction.Addresses"
          },
          "t_contract(IAuctionV1)20156": {
            "label": "contract IAuctionV1"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_array(t_struct(AuctionData)6997_storage)7_storage": {
            "label": "struct Auction.AuctionData[7]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cf595aaab2f063bc90362b89ae38ccdb3a312ae24f27b31a231db079676b7bab": {
      "address": "0x590709A164Cea83bD007505901b9e3f0A92C66A7",
      "txHash": "0x650f05be65cfe4d59b628b707614c7e23df19fa36c659ac9e0efba55826ff3a6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\GSN\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)84_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)10648_storage",
            "src": "contracts\\Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)20255",
            "src": "contracts\\Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:96"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:97"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:98"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:99"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:100"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:101"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:102"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:103"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:104"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10641_storage))",
            "src": "contracts\\Staking.sol:107"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\Staking.sol:108"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)10624_storage)dyn_storage",
            "src": "contracts\\Staking.sol:109"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:112"
          },
          {
            "contract": "Staking",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:114"
          },
          {
            "contract": "Staking",
            "label": "totalStakedAmount",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:115"
          },
          {
            "contract": "Staking",
            "label": "maxShareEventActive",
            "type": "t_bool",
            "src": "contracts\\Staking.sol:117"
          },
          {
            "contract": "Staking",
            "label": "divTokens",
            "type": "t_struct(AddressSet)1912_storage",
            "src": "contracts\\Staking.sol:119"
          },
          {
            "contract": "Staking",
            "label": "totalSharesOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:120"
          },
          {
            "contract": "Staking",
            "label": "tokenPricePerShare",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Staking.sol:121"
          },
          {
            "contract": "Staking",
            "label": "deductBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\Staking.sol:122"
          },
          {
            "contract": "Staking",
            "label": "shareRateScalingFactor",
            "type": "t_uint256",
            "src": "contracts\\Staking.sol:124"
          }
        ],
        "types": {
          "t_struct(Addresses)10648_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)20255": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)10641_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)10624_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(AddressSet)1912_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)84_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "txHash": "0x17762a6655da3cfa424faff942ffc49af9d649ee8cb19c20b54117a80bf9147b"
  }
}
