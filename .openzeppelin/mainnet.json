{
  "manifestVersion": "3.1",
  "impls": {
    "bdcc023e33a2c77ee88d33ca406af40012ecbea1d715f186fed12ad6e6ac2c9a": {
      "address": "0xC62B1d70045d70479f299f6222d41bB951bcf6c5",
      "txHash": "0x78fa1288618c699faad7f17ee798d6f5a2347ade35e1867252d31c543d32a83a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Auction",
            "label": "reservesOf",
            "type": "t_mapping(t_uint256,t_struct(AuctionReserves)55_storage)",
            "src": "Auction.sol:73"
          },
          {
            "contract": "Auction",
            "label": "auctionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "Auction.sol:74"
          },
          {
            "contract": "Auction",
            "label": "auctionBidOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)62_storage))",
            "src": "Auction.sol:75"
          },
          {
            "contract": "Auction",
            "label": "existAuctionsOf",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "src": "Auction.sol:76"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventId",
            "type": "t_uint256",
            "src": "Auction.sol:79"
          },
          {
            "contract": "Auction",
            "label": "lastAuctionEventIdV1",
            "type": "t_uint256",
            "src": "Auction.sol:80"
          },
          {
            "contract": "Auction",
            "label": "start",
            "type": "t_uint256",
            "src": "Auction.sol:81"
          },
          {
            "contract": "Auction",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "Auction.sol:82"
          },
          {
            "contract": "Auction",
            "label": "options",
            "type": "t_struct(Options)84_storage",
            "src": "Auction.sol:84"
          },
          {
            "contract": "Auction",
            "label": "addresses",
            "type": "t_struct(Addresses)71_storage",
            "src": "Auction.sol:85"
          },
          {
            "contract": "Auction",
            "label": "auctionV1",
            "type": "t_contract(IAuctionV1)6672",
            "src": "Auction.sol:86"
          },
          {
            "contract": "Auction",
            "label": "init_",
            "type": "t_bool",
            "src": "Auction.sol:88"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(AuctionReserves)55_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionReserves)"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserBid)62_storage))": {
            "label": "mapping(uint256 => mapping(address => struct Auction.UserBid))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Options)84_storage": {
            "label": "struct Auction.Options"
          },
          "t_struct(Addresses)71_storage": {
            "label": "struct Auction.Addresses"
          },
          "t_contract(IAuctionV1)6672": {
            "label": "contract IAuctionV1"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f83e5e6fac31ad7d3b9a966e8f7f518723251b48e83a6a56df3bca8363794e0": {
      "address": "0xF0f8C18A0e05489F40C4ca1d30d77Ed78D15dd20",
      "txHash": "0xa81a0d04c05407f0719c53db83e74badac3e59ecd67af02e8ee47905ecdcca7e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Token",
            "label": "swapToken",
            "type": "t_contract(IERC20)10484",
            "src": "Token.sol:24"
          },
          {
            "contract": "Token",
            "label": "swapIsOver",
            "type": "t_bool",
            "src": "Token.sol:25"
          },
          {
            "contract": "Token",
            "label": "swapTokenBalance",
            "type": "t_uint256",
            "src": "Token.sol:26"
          },
          {
            "contract": "Token",
            "label": "init_",
            "type": "t_bool",
            "src": "Token.sol:27"
          }
        ],
        "types": {
          "t_contract(IERC20)10484": {
            "label": "contract IERC20"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f82369397c12f2f6b9585b56444789a99ba18429e307be8b6f897f48d4dd9a5d": {
      "address": "0x87eaf8a8cA147b71552a4D3BAD9826c3dE744A4e",
      "txHash": "0x35cc4a34447625ebd88db79b03f6d033e7483acba88bb5f009db7b45a5bb3e5a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "NativeSwap",
            "label": "start",
            "type": "t_uint256",
            "src": "NativeSwap.sol:29"
          },
          {
            "contract": "NativeSwap",
            "label": "period",
            "type": "t_uint256",
            "src": "NativeSwap.sol:30"
          },
          {
            "contract": "NativeSwap",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "NativeSwap.sol:31"
          },
          {
            "contract": "NativeSwap",
            "label": "swapToken",
            "type": "t_contract(IERC20)10484",
            "src": "NativeSwap.sol:33"
          },
          {
            "contract": "NativeSwap",
            "label": "mainToken",
            "type": "t_contract(IToken)6837",
            "src": "NativeSwap.sol:34"
          },
          {
            "contract": "NativeSwap",
            "label": "auction",
            "type": "t_contract(IAuction)6658",
            "src": "NativeSwap.sol:35"
          },
          {
            "contract": "NativeSwap",
            "label": "swapTokenBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "NativeSwap.sol:37"
          },
          {
            "contract": "NativeSwap",
            "label": "init_",
            "type": "t_bool",
            "src": "NativeSwap.sol:40"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20)10484": {
            "label": "contract IERC20"
          },
          "t_contract(IToken)6837": {
            "label": "contract IToken"
          },
          "t_contract(IAuction)6658": {
            "label": "contract IAuction"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "98f2bcf167af130d304290fae7d7cb9d1a6089678aeb26afdb71b632ed116363": {
      "address": "0xdBdE0917F1F26c83ddFf46d796B078Ae93716353",
      "txHash": "0x2f6ee010874fe89c06e6374844d7b2100590ed3f2b5b1f2d8f17828a04b9ffe5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "BPD",
            "label": "poolYearAmounts",
            "type": "t_array(t_uint256)5_storage",
            "src": "BPD.sol:23"
          },
          {
            "contract": "BPD",
            "label": "poolTransferred",
            "type": "t_array(t_bool)5_storage",
            "src": "BPD.sol:24"
          },
          {
            "contract": "BPD",
            "label": "poolYearPercentages",
            "type": "t_array(t_uint256)5_storage",
            "src": "BPD.sol:25"
          },
          {
            "contract": "BPD",
            "label": "mainToken",
            "type": "t_address",
            "src": "BPD.sol:28"
          },
          {
            "contract": "BPD",
            "label": "init_",
            "type": "t_bool",
            "src": "BPD.sol:32"
          }
        ],
        "types": {
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_array(t_bool)5_storage": {
            "label": "bool[5]"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3dfde33fbec4f8360a89acbc0968a1b4c54b4e34ac29558ae854d5e5313f4a1b": {
      "address": "0x7CCD931dE817484b3436A6Cdd2280B35caB9541D",
      "txHash": "0x2d71bb2757da726c8fbae8f4c519f585c6725f5a7e89b32303a1ad2f501762d9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ForeignSwap",
            "label": "start",
            "type": "t_uint256",
            "src": "ForeignSwap.sol:33"
          },
          {
            "contract": "ForeignSwap",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "ForeignSwap.sol:34"
          },
          {
            "contract": "ForeignSwap",
            "label": "stakePeriod",
            "type": "t_uint256",
            "src": "ForeignSwap.sol:35"
          },
          {
            "contract": "ForeignSwap",
            "label": "maxClaimAmount",
            "type": "t_uint256",
            "src": "ForeignSwap.sol:36"
          },
          {
            "contract": "ForeignSwap",
            "label": "mainToken",
            "type": "t_address",
            "src": "ForeignSwap.sol:39"
          },
          {
            "contract": "ForeignSwap",
            "label": "staking",
            "type": "t_address",
            "src": "ForeignSwap.sol:40"
          },
          {
            "contract": "ForeignSwap",
            "label": "auction",
            "type": "t_address",
            "src": "ForeignSwap.sol:41"
          },
          {
            "contract": "ForeignSwap",
            "label": "bigPayDayPool",
            "type": "t_address",
            "src": "ForeignSwap.sol:42"
          },
          {
            "contract": "ForeignSwap",
            "label": "signerAddress",
            "type": "t_address",
            "src": "ForeignSwap.sol:43"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedAmount",
            "type": "t_uint256",
            "src": "ForeignSwap.sol:46"
          },
          {
            "contract": "ForeignSwap",
            "label": "totalSnapshotAmount",
            "type": "t_uint256",
            "src": "ForeignSwap.sol:47"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedAddresses",
            "type": "t_uint256",
            "src": "ForeignSwap.sol:48"
          },
          {
            "contract": "ForeignSwap",
            "label": "totalSnapshotAddresses",
            "type": "t_uint256",
            "src": "ForeignSwap.sol:49"
          },
          {
            "contract": "ForeignSwap",
            "label": "claimedBalanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "ForeignSwap.sol:52"
          },
          {
            "contract": "ForeignSwap",
            "label": "init_",
            "type": "t_bool",
            "src": "ForeignSwap.sol:55"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0d1933d235cc2f851154597ceef0f07d0a40d33a64c2a8b3058467723aa50d18": {
      "address": "0xaFf7187af1Ad7AAecAf899C8652EA00778821c80",
      "txHash": "0xefa81d47352c12abace94aa73dc22f61402429f88b4f6a1963f758f5033af9fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "SubBalances",
            "label": "addresses",
            "type": "t_struct(Addresses)4693_storage",
            "src": "SubBalances.sol:54"
          },
          {
            "contract": "SubBalances",
            "label": "subBalancesV1",
            "type": "t_contract(ISubBalancesV1)6820",
            "src": "SubBalances.sol:55"
          },
          {
            "contract": "SubBalances",
            "label": "startTimestamp",
            "type": "t_uint256",
            "src": "SubBalances.sol:62"
          },
          {
            "contract": "SubBalances",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "SubBalances.sol:63"
          },
          {
            "contract": "SubBalances",
            "label": "basePeriod",
            "type": "t_uint256",
            "src": "SubBalances.sol:64"
          },
          {
            "contract": "SubBalances",
            "label": "currentSharesTotalSupply",
            "type": "t_uint256",
            "src": "SubBalances.sol:65"
          },
          {
            "contract": "SubBalances",
            "label": "subBalanceList",
            "type": "t_array(t_struct(SubBalance)4684_storage)5_storage",
            "src": "SubBalances.sol:67"
          },
          {
            "contract": "SubBalances",
            "label": "periods",
            "type": "t_array(t_uint256)5_storage",
            "src": "SubBalances.sol:68"
          },
          {
            "contract": "SubBalances",
            "label": "stakeSessions",
            "type": "t_mapping(t_uint256,t_struct(StakeSession)4673_storage)",
            "src": "SubBalances.sol:69"
          },
          {
            "contract": "SubBalances",
            "label": "init_",
            "type": "t_bool",
            "src": "SubBalances.sol:71"
          }
        ],
        "types": {
          "t_struct(Addresses)4693_storage": {
            "label": "struct SubBalances.Addresses"
          },
          "t_contract(ISubBalancesV1)6820": {
            "label": "contract ISubBalancesV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_struct(SubBalance)4684_storage)5_storage": {
            "label": "struct SubBalances.SubBalance[5]"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]"
          },
          "t_mapping(t_uint256,t_struct(StakeSession)4673_storage)": {
            "label": "mapping(uint256 => struct SubBalances.StakeSession)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d7b4930df33c270687767bf197c66818dce1de4b62d7230f8d717d1bbc768f15": {
      "address": "0x6f66f6178f03ee8A280220068310c98047320F05",
      "txHash": "0x19af50a62ad9692f725688ef7dcf53fd5370cb0ee8fdc48a2d574b69dce54f86",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)3161_storage",
            "src": "Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)6749",
            "src": "Staking.sol:71"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "Staking.sol:79"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "Staking.sol:82"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "Staking.sol:83"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "Staking.sol:84"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "Staking.sol:85"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)3154_storage))",
            "src": "Staking.sol:90"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)3137_storage)dyn_storage",
            "src": "Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "Staking.sol:95"
          }
        ],
        "types": {
          "t_struct(Addresses)3161_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)6749": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)3154_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)3137_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7369_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ca46b862e65a0a8ffb14f74bdaea2c944691e0bbcf1b47f922ef3dd5612c44da": {
      "address": "0xB17BdCaFD7F37100144C90AEa3DA609f23f7c874",
      "txHash": "0x59010a5e18ab90b6ca47ea43629025cf7c18468000985507850eb5584092a8f3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)7340_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)3161_storage",
            "src": "Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)6720",
            "src": "Staking.sol:71"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "Staking.sol:79"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "Staking.sol:82"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "Staking.sol:83"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "Staking.sol:84"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "Staking.sol:85"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)3154_storage))",
            "src": "Staking.sol:90"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)3137_storage)dyn_storage",
            "src": "Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "Staking.sol:95"
          }
        ],
        "types": {
          "t_struct(Addresses)3161_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)6720": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)3154_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)3137_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)7340_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6892c5c4afa21fae3db4a11de97b610f47da99cf116d04d73e776c2ca89a94a5": {
      "address": "0x6Aef2dbC74298359F90b66EBFe8034899B9d6FEF",
      "txHash": "0xbe2379bb764be20ac0d426fe60ee207c0542cc726d4679881340a1b2f64124be",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:24"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:29"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)6592_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Staking",
            "label": "addresses",
            "type": "t_struct(Addresses)2794_storage",
            "src": "Staking.sol:70"
          },
          {
            "contract": "Staking",
            "label": "stakingV1",
            "type": "t_contract(IStakingV1)5972",
            "src": "Staking.sol:71"
          },
          {
            "contract": "Staking",
            "label": "shareRate",
            "type": "t_uint256",
            "src": "Staking.sol:79"
          },
          {
            "contract": "Staking",
            "label": "sharesTotalSupply",
            "type": "t_uint256",
            "src": "Staking.sol:80"
          },
          {
            "contract": "Staking",
            "label": "nextPayoutCall",
            "type": "t_uint256",
            "src": "Staking.sol:81"
          },
          {
            "contract": "Staking",
            "label": "stepTimestamp",
            "type": "t_uint256",
            "src": "Staking.sol:82"
          },
          {
            "contract": "Staking",
            "label": "startContract",
            "type": "t_uint256",
            "src": "Staking.sol:83"
          },
          {
            "contract": "Staking",
            "label": "globalPayout",
            "type": "t_uint256",
            "src": "Staking.sol:84"
          },
          {
            "contract": "Staking",
            "label": "globalPayin",
            "type": "t_uint256",
            "src": "Staking.sol:85"
          },
          {
            "contract": "Staking",
            "label": "lastSessionId",
            "type": "t_uint256",
            "src": "Staking.sol:86"
          },
          {
            "contract": "Staking",
            "label": "lastSessionIdV1",
            "type": "t_uint256",
            "src": "Staking.sol:87"
          },
          {
            "contract": "Staking",
            "label": "sessionDataOf",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)2787_storage))",
            "src": "Staking.sol:90"
          },
          {
            "contract": "Staking",
            "label": "sessionsOf",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "Staking.sol:91"
          },
          {
            "contract": "Staking",
            "label": "payouts",
            "type": "t_array(t_struct(Payout)2770_storage)dyn_storage",
            "src": "Staking.sol:92"
          },
          {
            "contract": "Staking",
            "label": "init_",
            "type": "t_bool",
            "src": "Staking.sol:95"
          }
        ],
        "types": {
          "t_struct(Addresses)2794_storage": {
            "label": "struct Staking.Addresses"
          },
          "t_contract(IStakingV1)5972": {
            "label": "contract IStakingV1"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Session)2787_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.Session))"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_struct(Payout)2770_storage)dyn_storage": {
            "label": "struct Staking.Payout[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)6592_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x8541e85fE86C6340682Cfe135D6FCE3cb5bDDC65",
    "txHash": "0x8f19d5811fabe82e7775fda0c7d0a620f2104844de3544447d59e581fe7142fa"
  }
}
