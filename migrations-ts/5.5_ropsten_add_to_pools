import dotenv from 'dotenv';
dotenv.config();
import { deployProxy, prepareUpgrade } from '@openzeppelin/truffle-upgrades';
import { AuctionManagerInstance } from '../types/truffle-contracts';
import fs from 'fs';
import path from 'path';
import {
  getDeployedContracts,
  TEST_NETWORKS,
} from './utils/get_deployed_contracts';

const ADDRESSES = require('../migration-output/address.json');
const AuctionManager = artifacts.require('AuctionManager');
const Auction = artifacts.require('Auction') as any;
const BPD = artifacts.require('BPD') as any;

module.exports = async function (deployer, network, [managerAddress]) {
  if (!process.argv.includes('migrate')) {
    return;
  }

  try {
    console.log(`Running on network: ${network}`);
    const { DEPLOYER_ADDRESS, MANAGER_ADDRESS } = process.env;

    if (!TEST_NETWORKS.includes(network)) {
      [DEPLOYER_ADDRESS].forEach((value) => {
        if (!value) {
          throw new Error('Please set the value in .env file');
        }
      });
    }
    const { auctionManager } = await getDeployedContracts(network);

    console.log('Sending values');
    await auctionManager?.sendToBPD('1000000000');
    console.log('Sent 1bln to bpd');
    await auctionManager?.sendToAuction(0, '250000000');
    console.log('Sent 250million to todays auction');
    await auctionManager?.sendToAuction(2, '250000000');
    console.log('Sent 250million to auction 2 days in future');
    await auctionManager?.sendToAuction(4, '250000000');
    console.log('Sent 250million to auction 4 days in future');
    await auctionManager?.sendToAuction(6, '250000000');
    console.log('Sent 250million to auction 6 days in future');

    console.log(
      'Minted Auction',
      (await auctionManager?.mintedAuction())?.toString()
    );
    console.log('Minted BPD', (await auctionManager?.mintedBPD())?.toString());

    console.log(
      '============================DEPLOYING CONTRACTS: DONE==============================='
    );
  } catch (err) {
    console.error(err);
    console.error(
      '============================DEPLOYING CONTRACTS: FAILED==============================='
    );

    process.exit();
  }
} as Truffle.Migration;

// because of https://stackoverflow.com/questions/40900791/cannot-redeclare-block-scoped-variable-in-unrelated-files
export {};
